<job>
  <jobID>randomGuaranteeChance</jobID>
  <numberOfRuns>9</numberOfRuns>
  <description>Random Kill &amp; Random Run</description>
  <problem class="problemMatrixFactorization">
    <latFactXDef class="latFactRange"/>
    <latFactYDef class="latFactRange"/>
    <latentFactorWidth>10</latentFactorWidth>
  </problem>
  <datasetDescription class="datasetDescriptionMF">
    <datasetTrainingFileName>inputs/ml-1m/ratings.dat</datasetTrainingFileName>
    <trainingSetDef class="ratingIDsComplement">
      <ratingIDs class="ratingIDsArithmeticSequence">
        <a1>5</a1>
        <d>5</d>
      </ratingIDs>
    </trainingSetDef>
    <datasetTestingFileName>inputs/ml-1m/ratings.dat</datasetTestingFileName>
    <testingSetDef class="ratingIDsArithmeticSequence">
      <a1>5</a1>
      <d>5</d>
    </testingSetDef>
    <usersContentFileName>inputs/ml-1m/users.dat</usersContentFileName>
    <itemsContentFileName>inputs/ml-1m/movies.dat</itemsContentFileName>
  </datasetDescription>
  <methods>
    <inputMethodDescriptions>
      <inputMethodDescription>
        <inputAgentConfiguration>
          <agentName>Agent_HillClimbing</agentName>
          <agentClassName>org.distributedea.agents.computingagents.Agent_HillClimbing</agentClassName>
          <arguments>
            <arguments>
              <argument>
                <name>numberOfNeighbors</name>
                <value>10</value>
              </argument>
            </arguments>
          </arguments>
        </inputAgentConfiguration>
        <problemToolDefinition>
          <problemToolClass>org.distributedea.problems.matrixfactorization.latentfactor.ProblemToolHillClimbingMFSGDist1RandomInEachRow</problemToolClass>
          <arguments>
            <arguments/>
          </arguments>
        </problemToolDefinition>
      </inputMethodDescription>
      <inputMethodDescription>
        <inputAgentConfiguration>
          <agentName>Agent_RandomSearch</agentName>
          <agentClassName>org.distributedea.agents.computingagents.Agent_RandomSearch</agentClassName>
          <arguments>
            <arguments/>
          </arguments>
        </inputAgentConfiguration>
        <problemToolDefinition>
          <problemToolClass>org.distributedea.problems.matrixfactorization.latentfactor.ProblemToolRandomSearchMF</problemToolClass>
          <arguments>
            <arguments/>
          </arguments>
        </problemToolDefinition>
      </inputMethodDescription>
      <inputMethodDescription>
        <inputAgentConfiguration>
          <agentName>Agent_Evolution</agentName>
          <agentClassName>org.distributedea.agents.computingagents.Agent_Evolution</agentClassName>
          <arguments>
            <arguments>
              <argument>
                <name>popSize</name>
                <value>10</value>
              </argument>
              <argument>
                <name>mutationRate</name>
                <value>0.9</value>
              </argument>
              <argument>
                <name>crossRate</name>
                <value>0.1</value>
              </argument>
              <argument>
                <name>selector</name>
                <value>org.distributedea.agents.computingagents.specific.evolution.selectors.CompareTwoSelector</value>
              </argument>
            </arguments>
          </arguments>
        </inputAgentConfiguration>
        <problemToolDefinition>
          <problemToolClass>org.distributedea.problems.matrixfactorization.latentfactor.ProblemToolEvolutionMFUniformCrossSGDist1RandomMutation</problemToolClass>
          <arguments>
            <arguments/>
          </arguments>
        </problemToolDefinition>
      </inputMethodDescription>
      <inputMethodDescription>
        <inputAgentConfiguration>
          <agentName>Agent_BruteForce</agentName>
          <agentClassName>org.distributedea.agents.computingagents.Agent_BruteForce</agentClassName>
          <arguments>
            <arguments/>
          </arguments>
        </inputAgentConfiguration>
        <problemToolDefinition>
          <problemToolClass>org.distributedea.problems.matrixfactorization.latentfactor.ProblemToolBruteForceMFSGDist1ByIndex</problemToolClass>
          <arguments>
            <arguments/>
          </arguments>
        </problemToolDefinition>
      </inputMethodDescription>
      <inputMethodDescription>
        <inputAgentConfiguration>
          <agentName>Agent_TabuSearch</agentName>
          <agentClassName>org.distributedea.agents.computingagents.Agent_TabuSearch</agentClassName>
          <arguments>
            <arguments>
              <argument>
                <name>tabuModelSize</name>
                <value>50</value>
              </argument>
              <argument>
                <name>numberOfNeighbors</name>
                <value>10</value>
              </argument>
            </arguments>
          </arguments>
        </inputAgentConfiguration>
        <problemToolDefinition>
          <problemToolClass>org.distributedea.problems.matrixfactorization.latentfactor.ProblemToolTabuSearchMFSGDist1RandomInEachRow</problemToolClass>
          <arguments>
            <arguments/>
          </arguments>
        </problemToolDefinition>
      </inputMethodDescription>
      <inputMethodDescription>
        <inputAgentConfiguration>
          <agentName>Agent_SimulatedAnnealing</agentName>
          <agentClassName>org.distributedea.agents.computingagents.Agent_SimulatedAnnealing</agentClassName>
          <arguments>
            <arguments>
              <argument>
                <name>temperature</name>
                <value>10000</value>
              </argument>
              <argument>
                <name>coolingRate</name>
                <value>0.002</value>
              </argument>
            </arguments>
          </arguments>
        </inputAgentConfiguration>
        <problemToolDefinition>
          <problemToolClass>org.distributedea.problems.matrixfactorization.latentfactor.ProblemToolSimulatedAnnealingMFSGDist1RandomInEachRow</problemToolClass>
          <arguments>
            <arguments/>
          </arguments>
        </problemToolDefinition>
      </inputMethodDescription>
      <inputMethodDescription>
        <inputAgentConfiguration>
          <agentName>Agent_DifferentialEvolution</agentName>
          <agentClassName>org.distributedea.agents.computingagents.Agent_DifferentialEvolution</agentClassName>
          <arguments>
            <arguments>
              <argument>
                <name>popSize</name>
                <value>50</value>
              </argument>
              <argument>
                <name>crossRate</name>
                <value>0.0</value>
              </argument>
            </arguments>
          </arguments>
        </inputAgentConfiguration>
        <problemToolDefinition>
          <problemToolClass>org.distributedea.problems.matrixfactorization.latentfactor.ProblemToolDifferentialEvolutionMF</problemToolClass>
          <arguments>
            <arguments/>
          </arguments>
        </problemToolDefinition>
      </inputMethodDescription>
    </inputMethodDescriptions>
  </methods>
  <islandModelConfiguration>
    <individualDistribution>true</individualDistribution>
    <neighbourCount>3</neighbourCount>
    <replanPeriodMS>60000</replanPeriodMS>
    <individualBroadcastPeriodMS>5000</individualBroadcastPeriodMS>
    <readyToSendIndividualsModelClassName>org.distributedea.agents.computingagents.universal.queuesofindividuals.readytosendindividuals.ReadyToSendIndivsThreeLastIndivModel</readyToSendIndividualsModelClassName>
    <receivedIndividualsModelClassName>org.distributedea.agents.computingagents.universal.queuesofindividuals.receivedindividuals.ReceivedIndivsThreeLastIndivModel</receivedIndividualsModelClassName>
    <readyToSendIndividualInserterClassName>org.distributedea.agents.computingagents.universal.queuesofindividualsselectors.readytosendindividual.ReadyToSendIndividualsOnlyOneInserter</readyToSendIndividualInserterClassName>
    <receivedIndividualSelectorClassName>org.distributedea.agents.computingagents.universal.queuesofindividualsselectors.receivedindividual.ReceivedIndivRemoveOneEach5sSelector</receivedIndividualSelectorClassName>
  </islandModelConfiguration>
  <planner class="plannerRandomGuaranteeChance">
    <MIN__OF__METHOD__TYPE>3</MIN__OF__METHOD__TYPE>
  </planner>
  <plannerEndCondition class="plannerTimeRestriction">
    <countOfReplanning>50</countOfReplanning>
  </plannerEndCondition>
  <pedigreeDefinition/>
</job>
